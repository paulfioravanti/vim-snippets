extends python

global !p

# ~/.vim/pythonx/global_helpers.py
from global_helpers import (
    closing_character
)

_GLOBAL_START = "global"
_GLOBAL_END = "endglobal"
_INLINE_PYTHON_START = "`!p "
_INLINE_PYTHON_END = "`"
_SNIPPET_START = "snippet"
_SNIPPET_END = "endsnippet"

def maybe_visual_colon(tabstop):
    return ":" if tabstop else ""

def parse_snippet_action_name(match):
    action_name = match.group(1)
    if action_name == "preexpand":
        return "pre_expand"
    else:
        return action_name.replace(" ", "_")

endglobal

snippet "choice tabstop" "Ultisnip tabstop" i
${${1:n}|${2:${VISUAL:choice1}},${3:choice2}|}$0
endsnippet

snippet "\b(context|preexpand|post expand|post jump)" "Snippet actions" r
`!p snip.rv = parse_snippet_action_name(match)` "${1:python_expression}"$0
endsnippet

snippet global "Global snippet" b
`!p snip.rv = _GLOBAL_START` !p

${0:${VISUAL:# python code goes here}}

`!p snip.rv = _GLOBAL_END`
endsnippet

snippet "maybe semi" "Call the maybe_semi function" i
`!p snip.rv = _INLINE_PYTHON_START + "maybe_semi(snip)" + _INLINE_PYTHON_END`$0
endsnippet

snippet "[Pp]ython" "Inline python code" r
`!p snip.rv = _INLINE_PYTHON_START`${1:snip.rv = }$2`!p snip.rv = _INLINE_PYTHON_END`$0
endsnippet

# Snippet options: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt#L662
snippet snippet "Ultisnips snippet definition" b
`!p snip.rv = _SNIPPET_START` ${1:"}${2:tab_trigger}`!p snip.rv = closing_character(t[1])` "${3:description}" ${4|b,i,w,r,t,s,m,e,A|}
${5:${VISUAL}}`!p snip.rv = "$0"`$0
`!p snip.rv = _SNIPPET_END`
endsnippet

snippet t "Python placeholder value" w
t[$1]$0
endsnippet

snippet "(?<!choice )tabstop" "Ultisnip tabstop" r
${${1:n}:${2:${VISUAL:placeholder}}}$0
endsnippet

snippet visual "Ultisnip Visual placeholder" i
`!p snip.rv = "${VISUAL" + maybe_visual_colon(t[1])`${1:${VISUAL:default}}`!p snip.rv = "}"`$0
endsnippet
