global !p

# ~/.vim/pythonx/global_helpers.py
from global_helpers import (
    closing_character
)

endglobal

snippet Array "Array() constructor" i
Array(${1:elements or length})$0
endsnippet

snippet .fill "Array.prototype.fill(value, start, end)" i
.fill(${1:value}${2:, ${3:start}${4:, ${5:end}}})$0
endsnippet

snippet .join "Array.prototype.join(separator)" i
.join(${1:"${2:,}"})$0
endsnippet

snippet .map "Array.prototype.map(callbackFn, thisArg)" i
.map(${1:${2:x} =>${3: \{} $4`!p snip.rv = closing_character(t[3])`})$0
endsnippet

snippet .reduce "Array.prototype.reduce(callbackFn, initialValue)" i
.reduce(${2:(${3:acc}, ${4:currentValue}) =>${5: \{} $6`!p snip.rv = closing_character(t[5])`}, ${1:initialValue})$0
endsnippet

snippet .reverse "Array.prototype.reverse()" i
.reverse()$0
endsnippet

snippet .slice "(Array|String).prototype.slice(indexStart, indexEnd)" i
.slice(${1:${2:indexStart}${3:, ${4:indexEnd}}})$0
endsnippet
