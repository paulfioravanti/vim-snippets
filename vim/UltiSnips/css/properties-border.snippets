global !p

# ~/.vim/pythonx/vim_pythonx_helpers.py
from vim_pythonx_helpers import (
    autojump_if_blank,
    make_context,
    make_jumper
)

# ~/.vim/pythonx/css_helpers.py
from css_helpers import (
    join_properties
)

endglobal

# See properties-border-radius.snippets for border-radius snippets
snippet border "border choice tabstop" b
border ${1|shorthand,conventional,logical,radius,collapse|}$0
endsnippet

snippet "border shorthand" "border shorthand properties" b
border: ${1|border width,border style|}${2: ${3|border style,color type|}${4: color type}$5};$0
endsnippet

snippet "border conventional" "border conventional properties choice tabstop" b
border ${1|top,bottom,left,right|}$0
endsnippet

context "make_context(snip)"
post_jump "make_jumper(snip, snip.tabstop)"
snippet "\bborder (top|bottom|left|right)" "border conventional properties" r
`!p autojump_if_blank(snip, [2])
`border-`!p snip.rv = match.group(1)`: ${1|border width,border style|}${2: ${3|border style,color type|}${4: color type}$5};$0
endsnippet

snippet "border logical" "border logical properties choice tabstop" b
border ${1|block,inline|}$0
endsnippet

snippet "\b(border) (block|inline)" "border logical block/inline choice tabstop" r
`!p snip.rv = join_properties(match)` ${1|shorthand,start,end|}$0
endsnippet

snippet "\b(border)[-\s](block|inline) (start|end)" "border block/inline start end choice tabstop" r
`!p snip.rv = join_properties(match)` ${1|shorthand,color,style,width|}$0
endsnippet

snippet "\b(border)[-\s](block|inline)(?:[-\s](start|end))? shorthand" "border block/inline shorthand" r
`!p snip.rv = join_properties(match)`: ${1|border width,border style|}${2: ${3|border style,color type|}${4: color type}$5};$0
endsnippet

snippet "\b(border)[-\s](block|inline)[-\s](start|end) (color)" "border block/inline start/end color" r
`!p snip.rv = join_properties(match)`: color type$1;$0
endsnippet

snippet "\b(border)[-\s](block|inline)[-\s](start|end) (style)" "border block/inline start/end style" r
`!p snip.rv = join_properties(match)`: border style$1;$0
endsnippet

snippet "\b(border)[-\s](block|inline)[-\s](start|end) (width)" "border block/inline start/end width" r
`!p snip.rv = join_properties(match)`: border width$1;$0
endsnippet

snippet "border[-\s]collapse" "border-collapse property" r
border-collapse: ${1|collapse,separate,global|};$0
endsnippet
