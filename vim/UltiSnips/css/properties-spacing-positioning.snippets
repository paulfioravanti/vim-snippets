global !p

# ~/.vim/pythonx/vim_pythonx_helpers.py
from vim_pythonx_helpers import (
    autojump_if_blank,
    make_context,
    make_jumper
)

# ~/.vim/pythonx/css_helpers.py
from css_helpers import (
    join_properties
)

endglobal

snippet "\b(margin|padding|inset)" "margin/padding choice tabstop" r
`!p snip.rv = match.group(1)` ${1|shorthand,conventional,logical|}$0
endsnippet

context "make_context(snip)"
post_jump "make_jumper(snip, snip.tabstop)"
snippet "\b(margin|padding|inset) shorthand" "CSS shorthand properties that deal with sides of an element" r
`!p autojump_if_blank(snip, [2, 4, 6])
snip.rv = match.group(1)`: ${1|length,percentage|}${2: ${3|length,percentage|}${4: ${5|length,percentage|}${6: ${7|length,percentage|}}}};$0
endsnippet

snippet "\b(margin|padding) conventional" "margin/padding conventional choice tabstop" r
`!p snip.rv = match.group(1)` ${1|top,bottom,left,right|}$0
endsnippet

snippet "\binset conventional" "inset conventional choice tabstop" r
${1|top,bottom,left,right|}$0
endsnippet

snippet "\b(margin|padding) (top|bottom|left|right)" "margin/padding to deal with specific sides of an element" r
`!p snip.rv = join_properties(match)`: ${1|length,percentage,auto,global,variable|};$0
endsnippet

snippet "\b(top|bottom|left|right)" "inset to deal with specific sides of an element" r
`!p snip.rv = match.group(1)`: ${1|length,percentage,auto,global,variable|};$0
endsnippet

snippet "\b(margin|padding|inset) logical" "margin/padding/inset logical choice tabstop" r
`!p snip.rv = match.group(1)` ${1|block,inline|}$0
endsnippet

snippet "\b(margin|padding|inset)[-\s](block|inline)" "margin/padding/inset logical block/inline choice tabstop" r
`!p snip.rv = join_properties(match)` ${1|shorthand,start,end|}$0
endsnippet

snippet "\b(margin|padding|inset)[-\s](block|inline) shorthand" "margin/inset shorthand logical block/inline choice tabstop" r
`!p snip.rv = join_properties(match)`: ${1|length,percentage,auto,global,variable|}${2: ${3|length,percentage|}};$0
endsnippet

snippet "\b(margin|padding|inset)[-\s](block|inline) (start|end)" "CSS properties dealing with margin/inset blocks/inline blocks" r
`!p snip.rv = join_properties(match)`: ${1|length,percentage,auto,global,variable|};$0
endsnippet
