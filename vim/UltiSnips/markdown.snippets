extends html

global !p

def heading(match):
    return "#" * int(match.group(1))

def emphasis_ending(opening):
    if any(char.isdigit() for char in opening):
        # Opening is still in choice tabstop mode
        return ""

    return opening

endglobal

snippet "(code|code block|block)" "Code block" rb
\`\`\`${1:txt}
${2:${VISUAL}}
\`\`\`
$0
endsnippet

snippet "code inline" "Inline Code" i
\`${1:${VISUAL}}\`$0
endsnippet

snippet comment "Markdown comment"
<!-- ${1:${VISUAL}} -->$0
endsnippet

snippet em "Markdown emphasis, strong, combination" w
${1|_,**,**_|}${2:${VISUAL}}`!p snip.rv = emphasis_ending(t[1])`$0
endsnippet

snippet footnote "Markdown Footnote"
[^${1:${VISUAL:Footnote}}]
[^$1]:${2:Text}$0
endsnippet

snippet "front matter" "Jekyll front matter for blog posts"
---
title: "${1:title}"
date: ${2:`date "+%Y-%m-%d %T"`} +${3:1100}
last_modified_at: $2 $3
tags: ${4:tags separated by spaces}
${5:narration_video_id: "video-id-goes-here"}
header:
  image: /assets/images/${6:`date "+%Y-%m-%d"`}/${7:image.jpg}
  image_description: "${8:description}"
  teaser: /assets/images/$6/$7
  overlay_image: /assets/images/$6/$7
  overlay_filter: ${9:0.4}
${10:  caption: >
    Photo by <a href="${11:author_link}">${12:author_name}</a> on <a href="${13:source_link}">${14:source_name}</a>}
excerpt: >
  ${15:some excerpt}
---
$0
endsnippet

snippet "heading ([1-6])" "Markdown heading" r
`!p snip.rv = heading(match)` ${0:${VISUAL}}
endsnippet

snippet image "Reference image link"
[![${1:${VISUAL:text}}][${2:$1 image url}]][${3:$1 link url}]
[$2]: ${4:image url}${5: "${6:$4}"}
[$3]: ${7:link url}${8: "${9:$7}"}$0
endsnippet

snippet "image inline" "Inline image"
[![${1:${VISUAL:img alt text}}](${2:img href})](${3:href})$0
endsnippet

snippet link "Reference link"
[${1:${VISUAL:Text}}][${2:id}]
[`!p snip.rv = t[2] or t[1]`]: ${3:url}${4: "${5:$3}"}$0
endsnippet

snippet "link inline" "Inline link"
[${1:${VISUAL:Text}}](${2:url})$0
endsnippet

# Specifically for steno dictionary entries.
# Copy a single/multi-stroke outline from the steno tape and it gets auto-filled
# by the snippet, swapping out new line characters for slashes.
# Final substitution is just to remove my final "copy" (KP*EU) brief from the
# entry, as sometimes gets highlighted in the Plover paper tape.
snippet steno "String" b
"${1:`!v substitute(@+, '\n', '/', 'g')->substitute('\/KP\*EU$', '', 'g')->substitute('\s', '', 'g')`}": "${2:value}"$0
endsnippet
