global !p

_TAG_NAMES = {
    "figure caption": "figcaption",
    "keyboard": "kbd",
    "list item": "li",
    "ordered list": "ol",
    "ruby text": "rt",
    "sample": "samp",
    "table data": "td",
    "table footer": "tfoot",
    "table head": "thead",
    "table row": "tr",
    "text area": "textarea",
    "unordered list": "ul"
}

def class_attribute_name(snip):
    # This handling needed for React.
    return "className" if snip.ft == "javascript" else "class"

def text_to_tag(match):
    text = match.group(1)
    return _TAG_NAMES.get(text, text)

endglobal

snippet "\b(article|audio|body|button|code|div|em|figcaption|figure|figure caption|footer|form|h[1-6]|head|html|kbd|keyboard|li(st item)?|main|nav|ol|ordered list|p|pre|rt|ruby|ruby text|samp(le)?|section|select|span|strong|style|table|table data|table footer|table head|table row|tbody|td|text\s?area|tf|th|thead|title|tr|ul|unordered list|var|video)" "HTML tag single-line or multi-line choice" r
`!p snip.rv = text_to_tag(match)` ${1|multi-line,single-line|}$0
endsnippet

snippet "\b(article|audio|body|button|code|div|em|figcaption|figure|figure caption|footer|form|h[1-6]|head|html|kbd|keyboard|li(st item)?|main|nav|ol|ordered list|p|pre|rt|ruby|ruby text|samp(le)?|section|select|span|strong|style|table|table data|table footer|table head|table row|tbody|td|text\s?area|tf|th|thead|title|tr|ul|unordered list|var|video) multi-line" "Multi-line HTML tag with id and class options" r
`!p
tag = text_to_tag(match)
`<`!p snip.rv = tag`${1:${2: id="${3:id}"}${4: ${5:`!p snip.rv = class_attribute_name(snip)`}="${6:class}"}}$7>
  ${8:${VISUAL}}
</`!p snip.rv = tag`>$0
endsnippet

snippet "\b(article|audio|body|button|code|div|em|figcaption|figure|figure caption|footer|form|h[1-6]|head|html|kbd|keyboard|li(st item)?|main|nav|ol|ordered list|p|pre|rt|ruby|ruby text|samp(le)?|section|select|span|strong|style|table|table data|table footer|table head|table row|tbody|td|text\s?area|tf|th|thead|title|tr|ul|unordered list|var|video) single-line" "Single-line HTML tag with id and class options" r
`!p
tag = text_to_tag(match)
`<`!p snip.rv = tag`${1:${2: id="${3:id}"}${4: ${5:`!p snip.rv = class_attribute_name(snip)`}="${6:class}"}}$7>${8:${VISUAL}}</`!p snip.rv = tag`>$0
endsnippet

snippet iframe "HTML iframe tag" i
<iframe src="${1:src}">$0</iframe>
endsnippet

snippet img "HTML img tag" i
<img src="${1:src}"${2: alt="${3:alt}"} />$0
endsnippet

snippet input "HTML input tag of type 'text'" b
<input type="text"${1:${2: id="${3:id}"}${4: class="${5:class}"}${6: name="${7:name}"}${8: value="${9:value}"}} />$0
endsnippet

snippet "\binput (button|checkbox|color|datetime-local|email|file|hidden|month|password|radio|reset|search|submit|text|time|url|week)" "HTML input tag of (type) with id, class, name, value" r
`!p
input_type = match.group(1)
`<input type="`!p snip.rv = input_type`"${1:${2: id="${3:id}"}${4: class="${5:class}"}${6: name="${7:name}"}${8: value="${9:value}"}} />$0
endsnippet

snippet "\binput (date|number|range)" "HTML input tag of (type) with id, name, min, max" r
`!p
input_type = match.group(1)
`<input type="`!p snip.rv = input_type`"${1:${2: id="${3:id}"}${4: class="${5:class}"}${6: name="${7:name}"}${8: value="${9:value}"}${10: min="${11:min}"}${12: max="${13:max}"}} />$0
endsnippet

snippet "input tel" "HTML input tag of telephone number type" b
<input type="tel"${1:${2: id="${3:id}"}${4: class="${5:class}"}${6: name="${7:name}"}${8: value="${9:value}"}${10: pattern="${11:pattern}"}} />$0
endsnippet

snippet label "Inline label tag" i
<label ${1:for="${2:input-id}}>${3:${VISUAL}}</label>$0
endsnippet

snippet "(link|anchor|a tag)" "HTML <a> tag" r
<a href="${1:url}"${2: target="${3|_blank,_parent,_top|}"}>
  ${4:${VISUAL:text}}
</a>$0
endsnippet

snippet "(link|anchor) (mail|email)" "HTML <a> tag link to telephone number" r
<a href="mailto:${1:${VISUAL:address}}">${2:$1}</a>$0
endsnippet

snippet "(link|anchor) phone" "HTML <a> tag link to telephone number" r
<a href="tel:${1:${VISUAL:number}}">${2:$1}</a>$0
endsnippet

snippet method "<form> method attribute" i
method="${1|post,get|}"$0
endsnippet

snippet option "HTML option tag" i
<option value="${1:value}">${2:text}</option>$0
endsnippet

snippet source "HTML source tag" i
<source src="${1:url}" type="${2:type}" />$0
endsnippet

snippet target "<form> target attribute" i
target="${1|_blank,_parent,_top|}"$0
endsnippet
