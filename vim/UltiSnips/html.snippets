priority -1

global !p

# ~/.vim/pythonx/vim_pythonx_helpers.py
from vim_pythonx_helpers import (
    autojump_if_blank,
    make_context,
    make_jumper
)

# ~/.vim/pythonx/global_helpers.py
from global_helpers import (
    visual_context
)

# ~/.vim/pythonx/html_helpers.py
from html_helpers import (
    can_map_to_tag_name,
    extract_ids_and_classes,
    is_html_tag,
    text_to_tag
)

# ~/.vim/pythonx/javascript_helpers.py
from javascript_helpers import (
    class_attribute_name
)

_MULTILINE = "multi-line"

def build_tag_with_attributes(snip, match):
    tag, attributes, tag_type = match.group(1, 2, 3)
    tag = text_to_tag(tag)
    # NOTE: Although a tag with attributes probably doesn't need this wrapping
    # $1 tabstop, without it, the snippet spacing is borked, which seems like a
    # bug in UltiSnips. Might be related to the following issue:
    # https://github.com/SirVer/ultisnips/issues/1013
    output = f"<{tag}${{1:"

    if attributes:
        ids, classes = extract_ids_and_classes(attributes)

        if ids:
            output += f" id=\"{ids}\""

        if classes:
            output += f" {class_attribute_name()}=\"{classes}\""
    else:
        output += "${2: id=\"${3:id}\"}"
        output += f"${{4: ${{5:{class_attribute_name()}}}=\"${{6:classes}}\"}}"

    output += "}$7>"

    visual = snip.context["visual"].strip(" \t\n\r")
    if tag_type == _MULTILINE:
        output += f"\n  ${{8:{visual}}}\n"
    else:
        output += f"${{8:{visual}}}"

    output += f"</{tag}>"
    snip.expand_anon(output)

def tag_args(match):
    return match.group(2) or ""

endglobal

context "can_map_to_tag_name(match.group(1))"
snippet "((?:\w+\s)?\w+)" "convert tag descriptions to tag names" r
`!p snip.rv = text_to_tag(match.group(1))`$0
endsnippet

context "is_html_tag(match.group(1))"
snippet "(\w+)([#\.][\w\-#\.]+)?" "HTML tag single-line or multi-line choice" r
`!p snip.rv = match.group(1) + tag_args(match)` ${1|multi-line,single-line|}$0
endsnippet

context "is_html_tag(match.group(1)) and visual_context(snip)"
post_jump "build_tag_with_attributes(snip, match)"
snippet "(\w+)([#\.][\w\-#\.]+)? ((multi|single)-line)" "HTML tag multi-line" r
$0
endsnippet

snippet iframe "HTML iframe tag" i
<iframe src="${1:src}">$0</iframe>
endsnippet

context "make_context(snip)"
post_jump "make_jumper(snip, snip.tabstop)"
snippet img "HTML img tag" i
`!p autojump_if_blank(snip, [2])
`<img src="${1:src}"${2: alt="${3:alt}"} />$0
endsnippet

snippet label "Inline label tag" i
<label ${1:for="${2:input-id}}>${3:${VISUAL}}</label>$0
endsnippet

snippet option "HTML option tag" i
<option value="${1:value}">${2:text}</option>$0
endsnippet

snippet source "HTML source tag" i
<source src="${1:url}" type="${2:type}" />$0
endsnippet
