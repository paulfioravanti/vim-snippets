global !p

# ~/.vim/pythonx/vim_pythonx_helpers.py
from vim_pythonx_helpers import (
    autojump_if_blank,
    make_context,
    make_jumper
)

# ~/.vim/pythonx/global_helpers.py
from global_helpers import (
    closing_character
)

from .ecto_query import (
    query_expression_name,
    queryable_first_character,
    queryable_name
)

endglobal

snippet asc "Ecto.Query.order_by/3 asc direction list" i
${1|asc,asc_nulls_last,asc_nulls_first|}: ${2:field}$0
endsnippet

snippet desc "Ecto.Query.order_by/3 desc direction list" i
${1|desc,desc_nulls_last,desc_nulls_first|}: ${2:field}$0
endsnippet

context "make_context(snip)"
post_jump "make_jumper(snip, snip.tabstop)"
snippet "from(?: (\w+))?" "Ecto.Query.from(expr, kw \\ [])" r
`!p
queryable = queryable_name(snip, match)
autojump_if_blank(snip, [2])
`from${1:(}${2:${3:`!p snip.rv = queryable_first_character(queryable)`} in }${4:`!p snip.rv = queryable`}$5`!p snip.rv = closing_character(t[1])`$0
endsnippet

snippet "\b(order(?: by)?|select|where)" "Ecto.Query.(order_by|select|where)/3" r
`!p snip.rv = query_expression_name(match)`: ${1:expression}$0
endsnippet

context "make_context(snip)"
post_jump "make_jumper(snip, snip.tabstop)"
snippet "\b(order(?: by)?|select|where) (?:function|expression)" "Ecto.Query.(order_by|select|where)/3" r
`!p autojump_if_blank(snip, [1, 3])
``!p snip.rv = query_expression_name(match)`(${1:${2:query}, }${3:[${4:binding}], }${5:expression})$0
endsnippet
