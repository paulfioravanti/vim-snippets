global !p

def maybe_ending_comma(snip):
    return "," if snip.ft == "json" else ""

def plover_modifier(match):
    modifier = format_match(match)
    return "ALT" if modifier == "OPTION" else modifier

def format_match(match):
    return match.group(1).upper()

endglobal

snippet "(alt|control|option|shift|super)" "Plover modifier keystroke" r
`!p snip.rv = plover_modifier(match)`(${1:KEY})$0
endsnippet

snippet command "Plover control command" w
{#${1:COMMAND}}$0
endsnippet

snippet "command shell" "Plover shell command" w
{:COMMAND:SHELL:bash -ci 'osascript $STENO_COMMAND/${1:directory}/${2:script}.scpt'}$0
endsnippet

# Specifically for steno dictionary entries.
# Copy a single/multi-stroke outline from the steno tape and it gets auto-filled
# by the snippet, swapping out new line characters for slashes.
# Final substitution is just to remove my final "copy" (KP*EU) brief from the
# entry, as sometimes gets highlighted in the Plover paper tape.
snippet steno "String steno dictionary entry" b
"${1:`!v substitute(@+, '\n', '/', 'g')->substitute('\/KP\*EU$\|\s', '', 'g')`}": "${2:value}"`!p snip.rv = maybe_ending_comma(snip)`$0
endsnippet

snippet "\bsteno ([AaBbDdEeFfGgHhKkLlOoPpRrSsTtUuWwZz0-9\*\/\-]+)" "String steno dictionary entry with outline" r
"${1:`!p snip.rv = format_match(match)`}": "${2:value}"`!p snip.rv = maybe_ending_comma(snip)`$0
endsnippet
