global !p

# ~/.vim/pythonx/vim_pythonx_helpers.py
from vim_pythonx_helpers import (
    autojump_if_blank,
    make_context,
    make_jumper
)

def type_alias_default_text(match):
    return "Model" if match.group(1) == "model" else "TypeAliasName"

def type_name_default_text(match):
    return "Msg" if match.group(1) in ["message", "msg"] else "TypeName"

endglobal

# NOTE: Make sure this only matches at the beginning of a line: no preceding
# spaces.
context "make_context(snip)"
post_jump "make_jumper(snip, snip.tabstop)"
snippet "^(custom type|message|msg)" "Custom type" r
`!p autojump_if_blank(snip, [3])
`type ${1:`!p snip.rv = type_name_default_text(match)`} =
    ${2:Variant1}${3:
    | ${4:Variant2}}$0
endsnippet

snippet "^(?<!custom )(?<!record )type" "choose between type alias and custom type" r
${1|custom type,type alias|}$0
endsnippet

snippet maybe "Maybe type" w
Maybe ${1:Type}$0
endsnippet

snippet "^(type alias|model)" "Type Alias" r
type alias ${1:`!p snip.rv = type_alias_default_text(match)`} =
    ${2:record type}$0
endsnippet

snippet variant "Custom type variant" b
| ${1:Variant}$0
endsnippet
