global !p

# ~/.vim/pythonx/vim_pythonx_helpers.py
from vim_pythonx_helpers import (
    autojump_if_blank,
    make_context,
    make_jumper
)

def case_variable_default_text(match, default):
    return text.strip() if (text := match.group(1)) else default

endglobal

context "make_context(snip)"
post_jump "make_jumper(snip, snip.tabstop)"
snippet "\bcase(?! maybe)(?! result)( \w+)?" "case statement" r
`!p autojump_if_blank(snip, [6])
`case ${1:`!p snip.rv = case_variable_default_text(match, "value")`} of
    ${2:valueOne} ->
        ${3:-- do something}

    ${4:valueTwo} ->
        ${5:-- do something else}${6:

    _ ->
        ${7:-- do the default thing}}$0
endsnippet

snippet "case maybe" "case statement for a Maybe type" b
case ${1:maybe} of
    Just ${2:value} ->
        ${3:-- do something}

    Nothing ->
        ${4:-- do something else}$0
endsnippet

snippet "case result" "case statement for a Result type" b
case ${1:result} of
    Ok ${2:data} ->
        ${3:-- do something}

    Err ${4:error} ->
        ${5:-- do something else}$0
endsnippet

snippet "else if" "else if clause" b
else if ${1:condition} then
    ${2:${VISUAL:-- do something}}$0

endsnippet

snippet if "if...else" b
if ${1:condition} then
    ${2:${VISUAL:-- do something}}

else
    ${3:-- do something else}$0
endsnippet

snippet "(?<!^)([Mm]atch|[Pp]attern)" "pattern for case statement" r
${1:match} ->
    ${2:${VISUAL:-- do something}}$0
endsnippet
