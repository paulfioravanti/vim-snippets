global !p

# ~/.vim/pythonx/global_helpers.py
from global_helpers import (
    maybe_comma
)

endglobal

snippet ".all(/?)?" "all?(pattern) {|element| ... } → true or false" r
.all?${1:${2:(${3:pattern})}${4: block}}$0
endsnippet

snippet ".each(_| )slice" ".each_slice(n) { ... } → self" r
.each_slice(${1:n})${2: block}$0
endsnippet

snippet ".each with object" "each_with_object(object) { |(*args), memo_object| ... } → object" i
.each_with_object(${1:object})${2: block}$0
endsnippet

snippet "\.(map|collect)" "map {|element| ... } → array" r
.`!p snip.rv = match.group(1)` block$0
endsnippet

snippet "\.(reduce|inject)" "reduce(initial_operand) {|memo, operand| ... } → object" r
.`!p snip.rv = match.group(1)`(${1:initial_value}`!p snip.rv = maybe_comma(t[1], t[2])`${2::${3:symbol}})${4: block}$0
endsnippet

snippet .sum ".sum(initial_value = 0) {|element| ... }" i
.sum${1:(${2:initial_value})}${3: block}$0
endsnippet
