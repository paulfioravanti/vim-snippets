global !p

# ~/.vim/pythonx/c/stdio.py
from c.stdio import (
    printf_expand_args
)

endglobal

post_jump "printf_expand_args(snip, 2, 3, 4)"
snippet "\b(fprintf(_s)?)" "int fprintf/fprintf_s( FILE *restrict stream, const char *restrict format, ... );" r
`!p snip.rv = match.group(1)`("${1:stream}, ${2:format}\n"$3);$0
endsnippet

snippet print "choose print function" b
${1|printf,fprintf,sprintf,snprintf,printf_s,sprintf_s,snprintf_s|}$0
endsnippet

snippet "print f" "printf function name" i
printf$0
endsnippet

post_jump "printf_expand_args(snip, 1, 2, 3)"
snippet "\b(printf(_s)?)" "int printf/printf_s( const char *restrict format, ... );" r
`!p snip.rv = match.group(1)`("${1:format}\n"$2);$0
endsnippet

post_jump "printf_expand_args(snip, 3, 4, 5)"
snippet "\b(snprintf(_s)?)" "int snprintf/snprintf_s( char *restrict buffer, size_t bufsz, const char *restrict format, ... );" r
`!p snip.rv = match.group(1)`("${1:buffer}, ${2:bufsz}, ${3:format}\n"$4);$0
endsnippet

post_jump "printf_expand_args(snip, 2, 3, 4)"
snippet "\b(sprintf(_s)?)" "int sprintf/sprintf_s( char *restrict buffer, const char *restrict format, ... );" r
`!p snip.rv = match.group(1)`("${1:buffer}, ${2:format}\n"$3);$0
endsnippet

snippet "(?<=<)standard\s?[iI][oO]" "stdio library header name" r
stdio.h$0
endsnippet

snippet "(?<!<)standard\s?[iI][oO]" "stdio" r
stdio$0
endsnippet
