snippet "(?<!<)hid API" "hidapi" r
hidapi$0
endsnippet

snippet "(?<=<)hid API" "hidapi header name" r
hidapi.h$0
endsnippet

snippet "hid close" "void HID_API_EXPORT hid_close(hid_device *dev)" b
hid_close(${1:handle});$0
endsnippet

snippet "hid device info" "struct hid_device_info" b
struct hid_device_info ${1:*}${2:devices}$3;$0
endsnippet

snippet "(?<== )hid enumerate" "struct hid_device_info HID_API_EXPORT *hid_enumerate(unsigned short vendor_id, unsigned short product_id)" r
hid_enumerate(${1:vendor_id}, ${2:product_id})$0
endsnippet

snippet "hid exit" "int HID_API_EXPORT hid_exit(void)" i
hid_exit();$0
endsnippet

snippet "hid free enumeration" "void HID_API_EXPORT hid_free_enumeration(struct hid_device_info *devs)" b
hid_free_enumeration(${1:devices});$0
endsnippet

snippet "(?<== )hid get manufacturer string" "int HID_API_EXPORT_CALL hid_get_manufacturer_string(hid_device *dev, wchar_t *string, size_t maxlen)" r
hid_get_manufacturer_string(${1:handle}, ${2:wstr}, ${3:maxlen})$0
endsnippet

snippet "(?<== )hid init" "int HID_API_EXPORT hid_init(void)" r
hid_init()$0
endsnippet

snippet "(?<== )hid open" "hid_device * hid_open(unsigned short vendor_id, unsigned short product_id, const wchar_t *serial_number)" r
hid_open(${1:vendor_id}, ${2:product_id}, ${3:serial_number})$0
endsnippet

snippet "(?<== )hid open path" "hid_device * HID_API_EXPORT hid_open_path(const char *path)" r
hid_open_path(${1:path})$0
endsnippet
