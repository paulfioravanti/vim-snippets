global !p

# ~/.vim/pythonx/global_helpers.py
from global_helpers import (
    closing_character
)

endglobal

snippet "(export )?const" "block-scoped constants" br
`!p
capture = match.group(1)
export = capture if capture else ""
snip.rv = export`const ${1:constant} = ${2:value}${3:;}$0
endsnippet

snippet function "function declaration" b
function ${1:name}(${2:params}) {
  $0
}
endsnippet

snippet "arrow function" "arrow function expression" i
${1:(}${2:params}`!p snip.rv = closing_character(t[1])` => ${3:{
  $5
}}${4:;}$0
endsnippet

snippet "function expression" "function expression" w
function (${1:params}) {
  $0
}${2:;}
endsnippet

priority -1
snippet function "choose arrow or normal function expression" i
${1|arrow function,function expression|}
endsnippet
priority 0

snippet "(let|var)" "variable with optional initialization" br
`!p snip.rv = match.group(1)` ${1:variable}${2: = ${3:value}}${4:;}$0
endsnippet

snippet object "Object data type" i
{ ${1:${2:key}: ${3:value}} }$0
endsnippet
